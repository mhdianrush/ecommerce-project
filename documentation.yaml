openapi: 3.0.0
info:
  title: E-Commerce API
  description: API untuk mengelola produk dan brand dalam aplikasi e-commerce.
  version: 1.0.0
servers:
  - url: http://localhost:8000
paths:
  /products:
    post:
      summary: Create a new product
      description: Membuat produk baru.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nama_product:
                  type: string
                  example: "Produk X"
                harga:
                  type: integer
                  example: 100000
                quantity:
                  type: integer
                  example: 10
                id_brand:
                  type: integer
                  example: 1
      responses:
        "200":
          description: Product created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
        "400":
          description: Invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request"
        "500":
          description: Failed to create product.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to create product"
  /products/{id}:
    get:
      summary: Get product by ID
      description: Mendapatkan produk berdasarkan ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID produk yang akan diambil.
      responses:
        "200":
          description: Product found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nama_product:
                    type: string
                  harga:
                    type: integer
                  quantity:
                    type: integer
                  id_brand:
                    type: integer
        "404":
          description: Product not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Product not found"
    put:
      summary: Update a product
      description: Mengubah detail produk.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID produk yang akan diubah.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nama_product:
                  type: string
                  example: "Produk Baru"
                harga:
                  type: integer
                  example: 150000
                quantity:
                  type: integer
                  example: 5
                id_brand:
                  type: integer
                  example: 1
      responses:
        "200":
          description: Product updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product updated successfully"
        "400":
          description: Invalid request or product not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request or product not found"
    delete:
      summary: Delete a product
      description: Menghapus produk berdasarkan ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID produk yang akan dihapus.
      responses:
        "200":
          description: Product deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product deleted successfully"
        "404":
          description: Product not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Product not found"
  /products:
    get:
      summary: Get all products with pagination
      description: Mendapatkan semua produk dengan fitur pagination.
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
          description: Halaman saat ini (default: 1).
        - in: query
          name: size
          required: false
          schema:
            type: integer
          description: Jumlah item per halaman (default: 10).
      responses:
        "200":
          description: Products retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  page_information:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      page_size:
                        type: integer
                      records:
                        type: integer
                      total_page:
                        type: integer
                  list_data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nama_product:
                          type: string
                        harga:
                          type: integer
                        quantity:
                          type: integer
                        id_brand:
                          type: integer
  /brands:
    post:
      summary: Create a new brand
      description: Membuat brand baru.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nama_brand:
                  type: string
                  example: "Brand X"
      responses:
        "200":
          description: Brand created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
        "400":
          description: Invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request"
        "500":
          description: Failed to create brand.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to create brand"
  /brands/{id}:
    delete:
      summary: Delete a brand
      description: Menghapus brand jika tidak digunakan oleh produk.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID brand yang akan dihapus.
      responses:
        "200":
          description: Brand deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Brand deleted successfully"
        "400":
          description: Brand in use or invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Cannot delete brand, it is in use by products"
